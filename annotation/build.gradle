plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.9.21'
    id "com.vanniktech.maven.publish" version "0.26.0"
}

kotlin {
    jvm {
        jvmToolchain(8)
        withJava()
        testRuns.named("test") {
            executionTask.configure {
                useJUnitPlatform()
            }
        }
    }
    js {
        browser {
            commonWebpackConfig {
                cssSupport {
                    it.enabled.set(true)
                }
            }
        }
    }
    def hostOs = System.getProperty("os.name")
    def isArm64 = System.getProperty("os.arch") == "aarch64"
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X" && isArm64) nativeTarget = macosArm64('native')
    else if (hostOs == "Mac OS X" && !isArm64) nativeTarget = macosX64('native')
    else if (hostOs == "Linux" && isArm64) nativeTarget = linuxArm64("native")
    else if (hostOs == "Linux" && !isArm64) nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")


    sourceSets {
        commonMain {

        }
        commonTest {
            dependencies {
                implementation kotlin('test')
            }
        }
    }
}
